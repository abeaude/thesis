CmdLine
{
-m3 -e9 -m8
}
Silent
	{
		\mypublications \printbibheading
		\mainmatter \backmatter
		\printabbreviations \printsymbols \printglossaries \printglossary
		\minitocpage \minitoc \minitocpagecentered
		\xmark \cmark
		\endfirsthead \endhead \endfoot \endlastfoot
		\textbullet \textemdash
		\addplot \attomicsperfzoom \attomicsperf \Nattomicszoom \foreach \faCircle
		\attomicsperfspecificity \attomicsperfspecificityzoom \attomicsperfrecall \attomicsperfrecallzoom \attomicsperfprecision \attomicsperfprecisionzoom \attomicsperffun \attomicsperffunzoom \attomicsperfauroc \attomicsperfauroczoom \LRPCrossAttOmicsSubset \CrossAttOmicsGateSelFreq \CrossAttOmicsGateSparsityInteractionsAll \CrossAttOmicsGateSparsityInteractionsStable
		\robExtPrefixAllCompilationCommands \robExtCp \cacheTikz \robExtOutputDirectory \robExtCacheFolder
		\ExplSyntaxOn \ExplSyntaxOff \PrintChapterBiblioAndPubli \CreateCacheDirs
		\DontPrintSemicolon
		\leftarrow
		\ifhyperref
		\sourcecode
	}
UserWarnRegex =
{
(?!#Always! use! \nmid)\\not! *(\||\\mid)

# Capitalize section when saying Section 6.
(?!#-1:Capitalize! before! references)PCRE:\b(chapter|(sub)?section|theorem|lemma|proposition|corollary|appendix)~\\ref
(?!#1:Capitalize! before! references)POSIX:([^[:alnum:]]|^)(chapter|(sub)?section|theorem|lemma|proposition|corollary|appendix)~\\ref

# Spell it introduction
# PCRE:(?i)\bintro\b(?!#Spell! it! out.! This! comment! is! not! used.)
# POSIX:([^[:alnum:]]|^)intro([^[:alnum:]]|$)

# This relies on it being on a single line, and not having anything
# else on that line.  With PCRE we could match balanced [] and {},
# but I wonder if it's worth the complexity...
(?!#-2:Vertical! rules! in! tables! are! ugly)\\begin\{(array|tabularx?\*?)\}(\[.*\])?\{.*\|.*\}

(?!#-3:Optional! arguments! []! inside! optional! arguments! []! must! be! enclosed! in! {})PCRE:\[(?!![^\]\[{}]*{(?!![^\]\[{}]*}))[^\]]*\[

}
UserWarn
	{
		# Use \symcal instead of \mathcal
		\mathcal
		\mathbf
		\mathbb
	}
MathEnvir
	{
		displaymath math eqnarray array equation
		align alignat gather flalign multline
		dmath dgroup darray
		algomathdisplay
	}