# Settings
$ENV{'TEXINPUTS'}='./texmf//:';
$pdf_mode = 5;
$max_repeat=10;
$bibtex_use = 2;
push @generated_exts, 'loe', 'lol', 'lor', 'run.xml', 'glg', 'glstex', 'aux', 'glo', 'bcf', 'fls', 'glg-abr', 'glo-abr', 'ist', 'lof', 'slg', 'slo', 'sls', 'toc', 'fdb_latexmk', 'gls', 'gls-abr', 'xdv';

##############
# Glossaries #
##############
add_cus_dep( 'glo', 'gls', 0, 'glo2gls' );
add_cus_dep( 'acn', 'acr', 0, 'glo2gls');  # from Overleaf v1
sub glo2gls {
    my ($base_name, $path) = fileparse( $_[0] );
    my @args = ( "-d", $path, $base_name );
    if ($silent) { unshift @args, "-q"; }
    return system "makeglossaries", @args;
}

#############
# makeindex #
#############
@ist = glob("*.ist");
if (scalar(@ist) > 0) {
    $makeindex = "makeindex -s $ist[0] %O -o %D %S";
}

#######
# svg #
#######
add_cus_dep('svg', 'pdf', 0, 'svg2pdf');
sub svg2pdf {
    system("inkscape --export-area-drawing --export-pdf=\"$_[0].pdf\" \"$_[0].svg\"");
}
##########
# drawio #
##########
add_cus_dep('drawio', 'pdf', 0, 'drawio2pdf');
sub drawio2pdf {
    system("drawio --export --format pdf --border 0 --crop --page-index 1 \"$_[0].drawio\"");
}

####################
# externaldocument #
####################
# # Subdirectory for output files from compilation of external documents:
# $sub_doc_output = '../PDF/output-subdoc';

# # Options to supply to latexmk for compilation of external documents:
# @sub_doc_options = ();

# push @sub_doc_options, '-pdfxe'; # Use xelatex for compilation of external documents.

# #--------------------

# # Add a pattern for xr's log-file message about missing files to latexmk's
# # list.  Latexmk's variable @file_not_found is not yet documented.
# # This line isn't necessary for v. 4.80 or later of latexmk.
# push @file_not_found, '^No file\\s*(.+)\s*$';

# add_cus_dep( 'tex', 'aux', 0, 'makeexternaldocument' );
# sub makeexternaldocument {
#     if ( $root_filename ne $_[0] )  {
#         my ($base_name, $path) = fileparse( $_[0] );
#         print $base_name;
#         print $path;
#         pushd $path;
#         my $return = system "latexmk",
#                             @sub_doc_options,
#                             "-aux-directory=$sub_doc_output",
#                             "-output-directory=$sub_doc_output",
#                             $base_name;
#         if ( ($sub_doc_output ne ' ') && ($sub_doc_output ne '.') ) {
#                # In this case, .aux file generated by pdflatex isn't in same
#                # directory as the .tex file.
#                # Therefore:
#                # 1. Actual generated aux file must be listed as produced by this
#                #    rule, so that latexmk deals with dependencies correctly.
#                #    (Problem to overcome: If $sub_dir_output is same as $aux_dir
#                #    for the main document, xr may read the .aux file in the
#                #    aux_dir rather than the one the cus dep is assumed by latexmk
#                #    to produce, which is in the same directory as the .tex source
#                #    file for this custom dependency.)
#                #    Use the latexmk subroutine rdb_add_generated to do this.
#                # 2. A copy of the .aux file must be in same directory as .tex file
#                #    to satisfy latexmk's definition of a custom dependency.
#              rdb_add_generated( "$sub_doc_output/$base_name.aux" );
#              copy "$sub_doc_output/$base_name.aux", ".";
#         }
#         popd();
#         return $return;
#    }
# }
